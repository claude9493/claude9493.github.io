<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Learning | Yun Zhang</title>
    <link>https://claude9493.github.io/tag/deep-learning/</link>
      <atom:link href="https://claude9493.github.io/tag/deep-learning/index.xml" rel="self" type="application/rss+xml" />
    <description>Deep Learning</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 05 Sep 2021 23:47:30 +0800</lastBuildDate>
    <image>
      <url>https://claude9493.github.io/media/icon_hu182a187efcbb5983d11baccfdc1e2d93_53539_512x512_fill_lanczos_center_3.png</url>
      <title>Deep Learning</title>
      <link>https://claude9493.github.io/tag/deep-learning/</link>
    </image>
    
    <item>
      <title>Graph Neural Networks</title>
      <link>https://claude9493.github.io/project/graph-neural-networks/</link>
      <pubDate>Sun, 05 Sep 2021 23:47:30 +0800</pubDate>
      <guid>https://claude9493.github.io/project/graph-neural-networks/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;I am currently learning some basic concepts related to Graph Neural Networks (GNN) and representation learning.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;node2vec-simulations-of-biased-random-walks&#34;&gt;Node2Vec: simulations of biased random walks&lt;/h2&gt;
&lt;p&gt;I use this open-source &lt;a href=&#34;https://github.com/eliorc/node2vec&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;node2vec&lt;/a&gt; implementation to simulate biased random walks in the node2vec algorithm. Following two videos illustrate the in-out parameter $q$&amp;rsquo;s role played in random walks with fixed return parameter $p$, i.e. a &amp;ldquo;ratio&amp;rdquo; of BFS vs. DFS.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;High in-out parameter $q$, Micro-view of neighbourhood, BFS









  





&lt;video controls  &gt;
  &lt;source src=&#34;https://claude9493.github.io/project/graph-neural-networks/biased-random-walk-BFS.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Low in-out parameter $q$, Macro-view of neighbourhood, DFS









  





&lt;video controls  &gt;
  &lt;source src=&#34;https://claude9493.github.io/project/graph-neural-networks/biased-random-walk-DFS.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
